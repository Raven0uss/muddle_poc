import * as Models from './Models';
export declare class Image4ioClient {
    baseUrl: string;
    upload: Object;
    apiKey: string;
    apiSecret: string;
    constructor(apiKey: string, apiSecret: string);
    UploadImage(model: Models.UploadImagesRequest): Promise<any>;
    private UploadImageAsync;
    CopyImage(model: Models.CopyImageRequest): Promise<any>;
    private CopyImageAsync;
    GetImage(model: Models.GetImageRequest): Promise<any>;
    private GetImageAsync;
    DeleteFolder(model: Models.DeleteFolderRequest): Promise<any>;
    private DeleteFolderAsync;
    DeleteImage(model: Models.DeleteImageRequest): Promise<any>;
    private DeleteImageAsync;
    CreateFolder(model: Models.CreateFolderRequest): Promise<any>;
    private CreateFolderAsync;
    FetchImage(model: Models.FetchImageRequest): Promise<any>;
    private FetchImageAsync;
    FetchStream(model: Models.FetchStreamRequest): Promise<any>;
    private FetchStreamAsync;
    ListFolder(model: Models.ListFolderRequest): Promise<any>;
    private ListFolderAsync;
    MoveImage(model: Models.MoveImageRequest): Promise<any>;
    private MoveImageAsync;
    Purge(): Promise<any>;
    private PurgeAsync;
    GetSubscription(): Promise<any>;
    private GetSubscriptionAsync;
    StartUploadStream(model: Models.StartUploadStreamRequest): Promise<any>;
    private StartUploadStreamAsync;
    UploadStreamPart(model: Models.UploadStreamPartRequest): Promise<any>;
    private UploadStreamPartAsync;
    FinalizeStream(model: Models.FinalizeStreamRequest): Promise<any>;
    private FinalizeStreamAsync;
    GetStream(model: Models.GetStreamRequest): Promise<any>;
    private GetStreamAsync;
    DeleteStream(model: Models.DeleteStreamRequest): Promise<any>;
    private DeleteStreamAsync;
}
